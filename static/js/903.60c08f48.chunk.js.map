{"version":3,"file":"static/js/903.60c08f48.chunk.js","mappings":"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","sources":["components/Phonebook/Form.styled.js","redux/PhoneBook/phone-book-oporations.js","redux/PhoneBook/phone-book-selectors.js","components/Phonebook/NameEditor.js","components/Phonebook/ContactList.styled.js","components/Phonebook/ContactList.js","components/Phonebook/Filter.js","components/Phonebook/PhoneBook.styled.js","views/UserView.js"],"sourcesContent":["import styled from 'styled-components';\r\nexport const Form = styled.form`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 60%;\r\n`;\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n`;\r\nexport const InputField = styled.input`\r\n  margin-top: 10px;\r\n  padding: 15px;\r\n  border: 1px solid #bdbdbd;\r\n  border-radius: 0.25rem;\r\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n`;","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './phone-book-actions';\r\n\r\n// axios.defaults.baseURL = 'https://6203af0f4d21c200170b9f5a.mockapi.io/api/v1/';\r\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) => dispatch => {\r\n    const contact = {\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => {\r\n        dispatch(addContactSuccess(data));\r\n      })\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};","export const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const getFoundedContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport { addContact } from '../../redux/PhoneBook/phone-book-oporations';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Label, InputField } from './Form.styled';\r\nimport { Button } from '../Button/Button.styled';\r\nimport { getContacts } from '../../redux/PhoneBook/phone-book-selectors';\r\nexport default function NameEditor() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleForm = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\r\n      )\r\n    ) {\r\n      const notify = `${name} is already on list`;\r\n      toast.error(notify);\r\n      return;\r\n    }\r\n    dispatch(addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label htmlFor=\"\">\r\n        Name\r\n        <InputField\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleForm}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          placeholder=\"name\"\r\n        />\r\n      </Label>\r\n      <Label htmlFor=\"\">\r\n        Number\r\n        <InputField\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleForm}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          placeholder=\"number\"\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nNameEditor.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};","import styled from 'styled-components';\r\n\r\nexport const ContactItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nexport const List = styled.ul`\r\n  width: 60%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\nexport const ContactData = styled.p``;\r\nexport const DeleteButton = styled.button``;","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchContacts, deleteContact } from '../../redux/PhoneBook/phone-book-oporations';\r\nimport { getFoundedContacts } from '../../redux/PhoneBook/phone-book-selectors';\r\nimport {\r\n  ContactItem,\r\n  List,\r\n  ContactData,\r\n  // DeleteButton,\r\n} from './ContactList.styled';\r\nimport { Button } from '../Button/Button.styled';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(state => getFoundedContacts(state));\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n  useEffect(() => {dispatch(fetchContacts()) }, [dispatch])\r\n  return (\r\n    // <ListWrapper>\r\n      <List>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactItem key={id}>\r\n            <ContactData>\r\n              {name}: {number}\r\n            </ContactData>\r\n            <Button onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </Button>\r\n          </ContactItem>\r\n        ))}\r\n      </List>\r\n    // </ListWrapper>\r\n  )\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      nick: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/PhoneBook/phone-book-actions';\r\nimport { getFilter } from '../../redux/PhoneBook/phone-book-selectors';\r\nimport {  Form, Label, InputField } from './Form.styled';\r\n\r\nexport default function Filter () {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Form>\r\n    <Label htmlFor=\"\">\r\n      <InputField\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(e)=>dispatch(changeFilter(e.currentTarget.value))}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        placeholder=\"Enter key word\"\r\n      />\r\n      </Label>\r\n      </Form>\r\n  )\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};","import styled from 'styled-components';\r\nexport const Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport NameEditor from '../components/Phonebook/NameEditor';\r\nimport ContactList from '../components/Phonebook/ContactList';\r\nimport Filter from '../components/Phonebook/Filter';\r\nimport { Container } from '../components/Phonebook/PhoneBook.styled';\r\nimport { fetchContacts } from '../redux/PhoneBook/phone-book-oporations';\r\n\r\nconst UserView = (params) => { \r\n    const dispatch = useDispatch();\r\n    useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n     return (\r\n        <Container>\r\n          <Toaster />\r\n          <NameEditor />\r\n         <h2 style={{\r\n           textAlign: 'center',\r\n         }}>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </Container>\r\n    );\r\n}\r\nexport default UserView;"],"names":["Form","styled","Label","InputField","fetchContacts","dispatch","fetchContactsRequest","axios","then","data","fetchContactsSuccess","catch","error","fetchContactsError","getContacts","state","phonebook","contacts","getFilter","filter","NameEditor","useState","name","setName","number","setNumber","useSelector","useDispatch","handleForm","e","target","value","onSubmit","preventDefault","find","contact","toLocaleLowerCase","notify","toast","addContactRequest","addContactSuccess","addContactError","addContact","htmlFor","type","onChange","pattern","title","required","placeholder","ContactItem","List","ContactData","ContactList","normalizedFilter","toLowerCase","includes","getFoundedContacts","onDeleteContact","id","deleteContactRequest","deleteContactSuccess","deleteContactError","deleteContact","useEffect","map","onClick","Filter","changeFilter","currentTarget","Container","params","style","textAlign"],"sourceRoot":""}